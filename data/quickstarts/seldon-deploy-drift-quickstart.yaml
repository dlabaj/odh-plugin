kind: ConsoleQuickStart
metadata:
  name: seldon-deploy-model-drift
  annotations:
    opendatahub.io/categories: 'AI/Machine learning,Deployment,Model serving,Monitoring,Python'
spec:
  displayName: Monitoring a deployed model for drift 
  appName: seldon-deploy
  durationMinutes: 10
  icon: 'images/seldon.svg'
  description: Launch a TensorFlow image classifier model and detect drifting requests. 
  introduction: |-
    ### This quick start shows you how to launch a TensorFlow image classifier model and detect when requests to the model are drifting.
    Seldon Deploy is a specialist set of tools designed to simplify and accelerate the process of deploying and managing your machine learning models.

    This quick start is a short version of the Seldon [Drift Detection](https://deploy.seldon.io/en/v1.2/contents/demos/seldon-core/drift-detection/index.html) tutorial.
  tasks:
    - title: Deploy a pretrained image classifier model
      description: |-
        ### Deploy a pretrained image classifier model
        1. Open Seldon Console and click **Create** to open the deployment creation wizard.
        2. Select the **SeldonDeployment** type and **TensorFlow** protocol and click **Next**.
        3. Choose the **tensorflow** runtime. Enter the model URL: `gs://seldon-models/tfserving/cifar10/resnet32`
        4. Click through the wizard to deploy the model.
      summary:
        success: You have deployed a pretrained tensorflow image classifier
        failed: Try the steps again or see the Seldon [Drift Detection](https://deploy.seldon.io/en/v1.2/contents/demos/seldon-core/drift-detection/index.html) tutorial.
    - title: Add a drift detector
      description: |-
        ### Deploy a drift detector for the image classifier
        1. From the image classifier model's page, under **Drift Detection**, click **Configure**.
        2. Enter the model name `cifar10` and the drift detector URL `gs://seldon-models/alibi-detect/cd/ks/cifar10-0_4_3`
        3. Set the batch size to `2`, the protocol to `tensorflow` and the port to `8080`.
        3. Click through wizard to deploy the drift detector.
      summary:
        success: The drift detector shows as loaded
        failed: Try the steps again or see the Seldon [Drift Detection](https://deploy.seldon.io/en/v1.2/contents/demos/seldon-core/drift-detection/index.html) tutorial.
    - title: Make predictions
      description: |-
        ### Make predictions:
        1. Go to the **Make predictions** screen.
        2. Run a single prediction for "truck" using CIFAR-10 data in TensorFlow payload format, available here: [https://deploy.seldon.io/en/v1.2/_downloads/b6d1cd4842d4d9f15696247ffdcf7262/cifar10_image.json](https://deploy.seldon.io/en/v1.2/_downloads/b6d1cd4842d4d9f15696247ffdcf7262/cifar10_image.json).
        3. Run a single prediction for truck outliers using CIFAR-10 data in TensorFlow payload format, available here: [https://deploy.seldon.io/en/v1.2/_downloads/9b60948e36d1fd9a95975e5392f2770c/outlier_image.json](https://deploy.seldon.io/en/v1.2/_downloads/9b60948e36d1fd9a95975e5392f2770c/outlier_image.json)
      summary:
        success: You see OK responses for each of the predictions.
        failed: Try the steps again or see the Seldon [Drift Detection](https://deploy.seldon.io/en/v1.2/contents/demos/seldon-core/drift-detection/index.html) tutorial.
    - title: Monitor drift
      description: |-
        ### Monitor drift:
        1. Go to the **Monitor** section of the deployment.
        2. Check the timeline to see the drift of requests over time.
      summary:
        success: You see graphs revealing drift of predictions.
        failed: Try the steps again or see the Seldon [Drift Detection](https://deploy.seldon.io/en/v1.2/contents/demos/seldon-core/drift-detection/index.html) tutorial.
  conclusion: You are now able to identify drift in requests sent to the model.
  nextQuickStart: []
